{"ast":null,"code":"import{createContext,useState,useEffect,useContext}from\"react\";import{FakeFetchCrypto,FetchAssets}from\"../api\";import{percentDifference}from'../utils';import{jsx as _jsx}from\"react/jsx-runtime\";const CrytpoContext=/*#__PURE__*/createContext({asserts:[],crypto:[],loading:false});export function CryptoContextProvider(_ref){let{children}=_ref;const[loading,setLoading]=useState(false);const[crypto,setCrypto]=useState([]);const[assets,setAssets]=useState([]);function mapAssets(assets,result){return assets.map(asset=>{const coin=result.find(c=>c.id===asset.id);return{grow:asset.price<coin.price,growPercent:percentDifference(asset.price,coin.price),totalAmount:asset.amount*coin.price,totalProfit:asset.amount*coin.price-asset.amount*asset.price,name:coin.name,...asset};});}useEffect(()=>{async function preload(){setLoading(true);const{result}=await FakeFetchCrypto();const assets=await FetchAssets();setAssets(mapAssets(assets,result));setCrypto(result);setLoading(false);}preload();},[]);function addAsset(newAsset){setAssets(prev=>mapAssets([...prev,newAsset],crypto));}return/*#__PURE__*/_jsx(CrytpoContext.Provider,{value:{loading,crypto,assets,addAsset},children:children});}export default CrytpoContext;export function useCrypto(){return useContext(CrytpoContext);}","map":{"version":3,"names":["createContext","useState","useEffect","useContext","FakeFetchCrypto","FetchAssets","percentDifference","jsx","_jsx","CrytpoContext","asserts","crypto","loading","CryptoContextProvider","_ref","children","setLoading","setCrypto","assets","setAssets","mapAssets","result","map","asset","coin","find","c","id","grow","price","growPercent","totalAmount","amount","totalProfit","name","preload","addAsset","newAsset","prev","Provider","value","useCrypto"],"sources":["/Users/admin/Desktop/React/Cripto/CRYPTO/src/context/crypto-context.jsx"],"sourcesContent":["import { createContext, useState, useEffect, useContext } from \"react\";\nimport { FakeFetchCrypto, FetchAssets } from \"../api\"\nimport {percentDifference,} from '../utils'\n\n\nconst  CrytpoContext = createContext({\n    asserts: [],\n    crypto: [],\n    loading: false,\n})\nexport function CryptoContextProvider({children}) {\n  const [loading, setLoading] = useState(false);\n  const [crypto, setCrypto] = useState([]);\n  const [assets, setAssets] = useState([]);\n\n  function mapAssets(assets, result) {\n    return assets.map(asset => {\n      const coin = result.find((c) => c.id === asset.id);\n      return {\n        grow: asset.price < coin.price,\n        growPercent: percentDifference(asset.price, coin.price),\n        totalAmount: asset.amount * coin.price,\n        totalProfit: asset.amount * coin.price - asset.amount * asset.price,\n        name: coin.name,\n        ...asset\n      };\n    })\n   \n  }\n\n  useEffect(() => {\n    async function preload() {\n      setLoading(true);\n      const { result } = await FakeFetchCrypto();\n      const assets = await FetchAssets();\n\n      setAssets(\n        mapAssets(assets, result)\n      );\n      setCrypto(result);\n      setLoading(false);\n    }\n    preload();\n  }, []);\n\n  function addAsset(newAsset) {\n    setAssets((prev) => mapAssets([...prev, newAsset], crypto ))\n    \n  }\n  return <CrytpoContext.Provider value={{loading, crypto, assets, addAsset}}>{children}</CrytpoContext.Provider>\n}\n\n\nexport default CrytpoContext\n\n\nexport function useCrypto(){\n  return useContext(CrytpoContext)\n}"],"mappings":"AAAA,OAASA,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CACtE,OAASC,eAAe,CAAEC,WAAW,KAAQ,QAAQ,CACrD,OAAQC,iBAAiB,KAAQ,UAAU,QAAAC,GAAA,IAAAC,IAAA,yBAG3C,KAAO,CAAAC,aAAa,cAAGT,aAAa,CAAC,CACjCU,OAAO,CAAE,EAAE,CACXC,MAAM,CAAE,EAAE,CACVC,OAAO,CAAE,KACb,CAAC,CAAC,CACF,MAAO,SAAS,CAAAC,qBAAqBA,CAAAC,IAAA,CAAa,IAAZ,CAACC,QAAQ,CAAC,CAAAD,IAAA,CAC9C,KAAM,CAACF,OAAO,CAAEI,UAAU,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC7C,KAAM,CAACU,MAAM,CAAEM,SAAS,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACiB,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAExC,QAAS,CAAAmB,SAASA,CAACF,MAAM,CAAEG,MAAM,CAAE,CACjC,MAAO,CAAAH,MAAM,CAACI,GAAG,CAACC,KAAK,EAAI,CACzB,KAAM,CAAAC,IAAI,CAAGH,MAAM,CAACI,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACC,EAAE,GAAKJ,KAAK,CAACI,EAAE,CAAC,CAClD,MAAO,CACLC,IAAI,CAAEL,KAAK,CAACM,KAAK,CAAGL,IAAI,CAACK,KAAK,CAC9BC,WAAW,CAAExB,iBAAiB,CAACiB,KAAK,CAACM,KAAK,CAAEL,IAAI,CAACK,KAAK,CAAC,CACvDE,WAAW,CAAER,KAAK,CAACS,MAAM,CAAGR,IAAI,CAACK,KAAK,CACtCI,WAAW,CAAEV,KAAK,CAACS,MAAM,CAAGR,IAAI,CAACK,KAAK,CAAGN,KAAK,CAACS,MAAM,CAAGT,KAAK,CAACM,KAAK,CACnEK,IAAI,CAAEV,IAAI,CAACU,IAAI,CACf,GAAGX,KACL,CAAC,CACH,CAAC,CAAC,CAEJ,CAEArB,SAAS,CAAC,IAAM,CACd,cAAe,CAAAiC,OAAOA,CAAA,CAAG,CACvBnB,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAEK,MAAO,CAAC,CAAG,KAAM,CAAAjB,eAAe,CAAC,CAAC,CAC1C,KAAM,CAAAc,MAAM,CAAG,KAAM,CAAAb,WAAW,CAAC,CAAC,CAElCc,SAAS,CACPC,SAAS,CAACF,MAAM,CAAEG,MAAM,CAC1B,CAAC,CACDJ,SAAS,CAACI,MAAM,CAAC,CACjBL,UAAU,CAAC,KAAK,CAAC,CACnB,CACAmB,OAAO,CAAC,CAAC,CACX,CAAC,CAAE,EAAE,CAAC,CAEN,QAAS,CAAAC,QAAQA,CAACC,QAAQ,CAAE,CAC1BlB,SAAS,CAAEmB,IAAI,EAAKlB,SAAS,CAAC,CAAC,GAAGkB,IAAI,CAAED,QAAQ,CAAC,CAAE1B,MAAO,CAAC,CAAC,CAE9D,CACA,mBAAOH,IAAA,CAACC,aAAa,CAAC8B,QAAQ,EAACC,KAAK,CAAE,CAAC5B,OAAO,CAAED,MAAM,CAAEO,MAAM,CAAEkB,QAAQ,CAAE,CAAArB,QAAA,CAAEA,QAAQ,CAAyB,CAAC,CAChH,CAGA,cAAe,CAAAN,aAAa,CAG5B,MAAO,SAAS,CAAAgC,SAASA,CAAA,CAAE,CACzB,MAAO,CAAAtC,UAAU,CAACM,aAAa,CAAC,CAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}